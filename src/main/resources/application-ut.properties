#########################################################################################################
###------------                        POSTGRESQL - Set Up                             ---------------###
#########################################################################################################
spring.datasource.url=jdbc:postgresql://localhost:5432/rlsp_shoponline_db?autoreconnect=true
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql
spring.sql.init.platform=postgres
spring.jpa.show-sql=true

## METADATA (DB properties)
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=true


## Postgres Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Project Context
server.servlet.context-path=/ecommerce

# Upload Properties
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10000KB
spring.servlet.multipart.max-request-size=110000KB

# Data compression
server.compression.enabled=true
server.compression.mime-types=application/javascript, application/json,text/css,text/html,text/javascript,text/plain,text/xml
server.compression.min-response-size=1024
server.http2.enabled=true

# Encoding
server.servlet.encoding.enabled=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.force-request=true
server.servlet.encoding.force-response=true

# Connection's Pool - Using HIRAKI
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# How long a client will wait for a connection (1000 miliseconds = 1 second)
spring.datasource.hikari.connection-timeout=20000 
# quantity of connection when in idle state
spring.datasource.hikari.minimum-idle=20
# max quantity of active connections
spring.datasource.hikari.maximum-pool-size=550
# Idle time for each connection (1000 miliseconds = 1 second)
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.pool-name=PollHikari
# Process into the DB
spring.datasource.dbcp2.pool-prepared-statements=true
# Number maximum of connections open and ready to connect
spring.datasource.dbcp2.max-open-prepared-statements=20

# Not save automatically into the DB ( SpringData will do that)
spring.datasource.hikari.auto-commit=false
# Limit session for each user
server.servlet.session.timeout=240m
# Do rollback if necessary
spring.transaction.rollback-on-commit-failure=true
# Batch for SQLs
spring.jpa.properties.hibernate.jdbc.batch_size=4
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.order_inserts=true
# 50 000 connections
server.tomcat.max-connections=50000
# Number of threads ready
server.tomcat.min-spare-threads=1000
# Clean the DB every 4 hours
spring.session.jdbc.cleanup-cron= 0 0 4 * * *

# Say to Spring Security we're gonna use the images/js/css on that folder
spring.mvc.static-path-pattern=/resources/static/**

####  FLYWAY ####
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-version=1
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-separator=__
spring.flyway.sql-migration-suffixes=.sql
spring.flyway.mixed=true

spring.jackson.serialization.fail-on-self-references=false